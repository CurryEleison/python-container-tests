name: Boto3 container demo with docker/build-push-action

on:
  push:
    paths:
      - 'alpine-buildpush-ecr/**/*'
      - '.github/workflows/ecr-buildpush.yml'
jobs:
  boto3imagebuildpushaction:
    name: Build Boto3 image with docker/build-push-action
    defaults:
      run:
        working-directory: ./alpine-buildpush-ecr
    env:
      AWS_DEFAULT_REGION: eu-west-1
      ECR_REPOSITORY: alpine-buildpush-demo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Branch information
        id: branchinfo
        run: |
          echo "::set-output name=isdefault::$([[ ${GITHUB_REF##*/} == "${{ github.event.repository.default_branch }}" ]] && echo true || echo false)"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ECR_PUSH_ROLE_ARN }}
          # role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 3600
          role-session-name: EcrBuildWorkerImageSession
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Image names
        id: buildinfo
        run: |
          echo "::set-output name=image_repo::"${{ steps.login-ecr.outputs.registry }}"/$ECR_REPOSITORY"
      - name: Docker meta - set up image tags and labels
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.buildinfo.outputs.image_repo }}
          tags: |
            type=sha
          flavor: |
            latest=${{ steps.branchinfo.outputs.isdefault }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./alpine-buildpush-ecr
          platforms: linux/amd64,linux/arm64
          push: ${{ steps.branchinfo.outputs.isdefault == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
